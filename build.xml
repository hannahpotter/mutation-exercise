<project name="Triangle" default="compile" basedir=".">

<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="lib/major/lib/ant-contrib.jar"/>

<!-- Directories that hold coverage and mutation results -->
<property name="dir.mut" value="mutation_results"/>
<property name="dir.cov" value="coverage_results"/>
<property name="dir.cov_original" value="coverage_original_results"/>
<property name="dir.cov_mutant" value="coverage_results"/>
<property file="foo.properties"/>

<loadfile property="live.mutants" srcFile="${dir.mut}/live_mutants.txt" failonerror="false"/>
<loadfile property="all.mutants" srcFile=".mutated/all_mutants.txt" failonerror="true"/>

<!-- Configuration for cobertura -->
<path id="cobertura.classpath">
    <fileset dir="lib">
        <include name="cobertura-2.0.3.jar" />
        <include name="cobertura-lib/**/*.jar" />
    </fileset>
</path>
<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

<!-- Target to clean up -->
<target name="clean" description="Clean">
    <delete dir="bin"/>
    <delete dir="formatter/bin"/>
</target>

<!-- Target to clean up -->
<target name="realclean" depends="clean">
    <delete dir=".instrumented"/>
    <delete>
        <fileset dir="." includes="*.ser"/>
    </delete>
   <delete dir="${dir.mut}"/>
   <delete dir="${dir.cov_mutant}"/>
</target>


<!-- Pre-compile and instrument mutants -->
<target name="init">
    <mkdir dir="bin"/>
    <mkdir dir="formatter/bin"/>

    <antcall target="compileFormatter" />
</target>

<!-- Pre-compile and instrument mutants -->
<target name="setup" depends="compile">
    <mkdir dir=".instrumented"/>

    <cobertura-instrument failOnError="true" toDir=".instrumented">
        <fileset dir="bin">
            <include name="**/*.class"/>
        </fileset>
    </cobertura-instrument>

    <foreach param="mutNo" list="${all.mutants}" target="compileInstrumentMutant" parallel="true" maxThreads="4" trim="true"/>
</target>

<!-- Compile and instrument an individual mutant -->
<target name="compileInstrumentMutant" description="Compile and instrument an individual mutant">
    <javac includeantruntime="true"
           srcdir=".mutated/mutants/${mutNo}"
           destdir=".mutated/mutants/${mutNo}"
           source="1.7"
           target="1.7"
         compiler="javac1.7"
           nowarn="true"
            debug="yes">
    </javac>
    <cobertura-instrument failOnError="true" toDir=".mutated/mutants/${mutNo}"
        datafile=".mutated/mutants/${mutNo}/cobertura.ser">
       <fileset dir=".mutated/mutants/${mutNo}">
            <include name="**/**.class"/>
        </fileset>
    </cobertura-instrument>
</target>

<!-- Compile the project -->
<target name="compile" depends="init" description="Compile">
    <javac includeantruntime="true"
           srcdir="src"
           destdir="bin"
           source="1.7"
           target="1.7"
         compiler="javac1.7"
           nowarn="true"
            debug="yes">
    </javac>
</target>

<!-- Compile the custom formatter -->
<target name="compileFormatter" description="Compile custom formatter">
    <javac includeantruntime="true"
           srcdir="formatter/src"
           destdir="formatter/bin"
           source="1.7"
           target="1.7"
         compiler="javac1.7"
           nowarn="true"
            debug="yes">
            <classpath location="lib/junit-4.11.jar"/>
            <classpath location="lib/cobertura-2.0.3.jar"/>
    </javac>
</target>

<!-- Target to compile the test suite -->
<target name="compile.tests" depends="compile" description="Compile all tests">
    <javac includeantruntime="true"
           srcdir="test"
          destdir="bin"
           source="1.7"
           target="1.7"
         compiler="javac1.7"
           nowarn="true"
            debug="yes">
            <classpath location="lib/junit-4.11.jar"/>
    </javac>
</target>

<!-- The original test target -->
<target name="test" depends="compile.tests" description="Run all unit test cases">
    <echo message="Running unit tests ..."/>
    <junit  printsummary="true"
              showoutput="false"
                    fork="false"
           haltonfailure="true">
        <formatter type="plain" usefile="false"/>
        <classpath path=".instrumented"/>
        <classpath path="bin"/>
        <classpath location="lib/junit-4.11.jar"/>
        <classpath location="lib/cobertura-2.0.3.jar"/>

        <batchtest fork="false">
            <fileset dir="test">
                <include name="**/*.java"/>
            </fileset>
        </batchtest>
    </junit>
</target>

<!-- The specific test target -->
<target name="testMutant" depends="compile.tests" description="Run all unit test cases">
    <echo message="Running unit tests ..."/>
    <echo message="==================================================="/>
    <junit  printsummary="true"
              showoutput="true"
                    fork="false"
           haltonfailure="true">
        <formatter classname="Formatter" usefile="no" />
<!--        <formatter type="plain" usefile="yes" /> -->
        <classpath path=".mutated/mutants/${mutNo}"/>
        <classpath path="bin"/>
        <classpath path="formatter/bin"/>
        <classpath location="lib/junit-4.11.jar"/>
        <classpath refid="cobertura.classpath"/>
        
        <sysproperty key="OUT_DIR" value=".mutated/mutants/${mutNo}/${dir.cov_mutant}" />
        <sysproperty key="SRC_DIR" value=".mutated/mutants/${mutNo}" />
        <test name="triangle.TriangleTest" methods="${testMethods}"></test>
    </junit>
</target>

<!-- The specific test target -->
<target name="testOriginal" depends="compile.tests" description="Run all unit test cases">
    <echo message="Running unit tests ..."/>
    <echo message="==================================================="/>
    <junit  printsummary="true"
              showoutput="true"
                    fork="false"
           haltonfailure="true">
        <formatter classname="Formatter" usefile="no" />
        <classpath path=".instrumented"/>
        <classpath path="bin"/>
        <classpath path="formatter/bin"/>
        <classpath location="lib/junit-4.11.jar"/>
        <classpath refid="cobertura.classpath"/>
        
        <test name="triangle.TriangleTest" methods="${testMethods}"></test>
    </junit>
</target>

<!-- Run mutation testing -->
<target name="mutation" depends="clean,init,compile.tests" description="Run mutation analysis for all unit test cases">
    <echo message="Running mutation analysis ..."/>

    <delete dir="${dir.mut}"/>
    <mkdir dir="${dir.mut}"/>
    <copy file=".mutated/mutants.log" tofile="${dir.mut}/mutants.log" />
    <copy todir="${dir.mut}/mutants">
        <fileset dir=".mutated/mutants" includes="*.java" />
    </copy>

    <junit  printsummary="false"
              showoutput="false"
        mutationAnalysis="true"
           timeoutOffset="100"
            exportCovMap="true"
           exportKillMap="false"
                    sort="sort_methods"
          mutantsLogFile="${dir.mut}/mutants.log"
              covMapFile="${dir.mut}/covMap.csv"
             killMapFile="${dir.mut}/killMap.csv"
             testMapFile="${dir.mut}/testMap.csv"
             summaryFile="${dir.mut}/summary.csv"
              resultFile="${dir.mut}/results.csv"
         killDetailsFile="${dir.mut}/killed.csv">

        <classpath path=".mutated"/>
        <classpath path="bin"/>
        <batchtest fork="false">
            <fileset dir="test">
                <include name="**/*.java"/>
            </fileset>
        </batchtest>
    </junit>
</target>

<!-- Coverage analysis -->
<target name="coverageMutants" description="Run coverage analysis for all live mutants">
    <foreach param="mutNo" list="${live.mutants}" target="coverageMutant" trim="true"/>
</target>

<target name="coverageMutant" description="Run coverage analysis">
    <delete dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}"/>
    <mkdir dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}" />

    <delete>
        <fileset dir="." includes="*.ser"/>
    </delete>
    <antcall target="testMutant" />
</target>

<target name="coverageOriginal" depends="compile" description="Run coverage analysis">
    <delete dir="${dir.cov_original}"/>
    <mkdir dir="${dir.cov_original}" />

    <delete>
        <fileset dir="." includes="*.ser"/>
    </delete>
    <antcall target="testOriginal" />
</target>

<!-- Coverage analysis -->
<target name="coverage" description="Run coverage analysis">
    <antcall target="clean" />
    <antcall target="compile" />
    <cobertura-instrument failOnError="true" toDir=".instrumented">
        <fileset dir="bin">
            <include name="**/*.class"/>
        </fileset>
    </cobertura-instrument>

    <antcall target="test" />

    <delete dir="${dir.cov}"/>
    <mkdir dir="${dir.cov}" />
    <cobertura-report format="html" destdir="${dir.cov}" srcdir="src" />

    <cobertura-report format="summaryXml" destdir="${dir.cov}" srcdir="src" />
    <echo message="==================================================="/>
    <echo message="Coverage results:"/>
    <echo/>
    <concat>
        <fileset dir="${dir.cov}" includes="coverage-summary.xml"/>
        <filterchain>
            <linecontains>
                <contains value="coverage line"/>
            </linecontains>
        </filterchain>
    </concat>
    <echo message="==================================================="/>
    <echo message="Coverage report (html): coverage_results/index.html"/>
    <echo message="==================================================="/>
</target>

</project>
