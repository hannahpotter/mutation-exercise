<project name="Triangle" default="compile" basedir=".">

<!-- Directories that hold coverage and mutation results -->
    <property name="dir.mut" value="mutation_results"/>
    <property name="dir.cov_original" value="coverage_original_results"/>
    <property name="dir.cov_mutant" value="coverage_results"/>
    <property file="foo.properties"/>

<!-- Configuration for cobertura -->
    <path id="cobertura.classpath">
        <fileset dir="lib">
            <include name="cobertura-2.0.3.jar" />
            <include name="cobertura-lib/**/*.jar" />
        </fileset>
    </path>
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

<!-- Target to clean up -->
    <target name="clean" description="Clean">
        <delete dir="bin"/>
        <delete>
            <fileset dir="." includes="*.ser"/>
        </delete>
       <delete dir="${dir.cov_original}"/>
       <delete dir="${dir.cov_mutant}"/>
       <delete dir="${dir.mut}"/>
    </target>

<!-- Target to initialize build -->
    <target name="init">
        <mkdir dir="bin"/>
    </target>

<!-- Target to compile the project -->
    <target name="compile" depends="init" description="Compile">
        <javac includeantruntime="true"
               srcdir="src"
               destdir="bin"
               source="1.7"
               target="1.7"
             compiler="javac1.7"
               nowarn="true"
                debug="yes">
        </javac>
    </target>

    <target name="compileMutant" depends="init" description="Compile">
        <javac includeantruntime="true"
               srcdir=".mutated/mutants/${mutNo}"
               destdir=".mutated/mutants/${mutNo}"
               source="1.7"
               target="1.7"
             compiler="javac1.7"
               nowarn="true"
                debug="yes">
        </javac>
    </target>

    <target name="compileFormatter" depends="init" description="Compile">
        <javac includeantruntime="true"
               srcdir="formatter"
               destdir="bin"
               source="1.7"
               target="1.7"
             compiler="javac1.7"
               nowarn="true"
                debug="yes">
                <classpath location="lib/cobertura-2.0.3.jar"/>
        </javac>
    </target>

<!-- Target to compile the test suite -->
    <target name="compile.tests" depends="compile" description="Compile all tests">
        <javac includeantruntime="true"
               srcdir="test"
              destdir="bin"
               source="1.7"
               target="1.7"
             compiler="javac1.7"
               nowarn="true"
                debug="yes">
                <classpath location="lib/junit-4.11.jar"/>
        </javac>
    </target>

<!-- The original test target -->
    <target name="test" depends="compile.tests" description="Run all unit test cases">
        <echo message="Running unit tests ..."/>
        <junit  printsummary="true"
                  showoutput="true"
                        fork="true"
               haltonfailure="true">
            <formatter type="plain" usefile="false"/>
            <classpath path=".instrumented"/>
            <classpath path="bin"/>
            <classpath location="lib/junit-4.11.jar"/>
            <classpath location="lib/cobertura-2.0.3.jar"/>

            <batchtest fork="true">
                <fileset dir="test">
                    <include name="**/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

<!-- The specific test target -->
    <target name="testSpecificMutant" depends="compile.tests" description="Run all unit test cases">
        <echo message="Running unit tests ..."/>
        <echo message="==================================================="/>
        <echo message="${testMethod}"/>
        <junit  printsummary="true"
                  showoutput="true"
                        fork="true"
               haltonfailure="true">
            <formatter type="plain" usefile="false"/>
            <classpath path=".instrumented"/>
            <classpath path="bin"/>
            <classpath path=".mutated/mutants/${mutNo}/triangle"/>
            <classpath location="lib/junit-4.11.jar"/>
            <classpath location="lib/cobertura-2.0.3.jar"/>
            
            <test name="triangle.TriangleTest" methods="${testMethods}"></test>
        </junit>
    </target>

    <!-- The specific test target -->
    <target name="testSpecificOriginal" depends="compile.tests" description="Run all unit test cases">
        <echo message="Running unit tests ..."/>
        <echo message="==================================================="/>
        <junit  printsummary="true"
                  showoutput="true"
                        fork="true"
               haltonfailure="true">
            <formatter classname="formatter.Formatter" usefile="no" />
            <classpath path=".instrumented"/>
            <classpath path="bin/TriangleTest.class"/>
            <classpath location="lib/junit-4.11.jar"/>
            <classpath location="lib/cobertura-2.0.3.jar"/>
            
            <test name="triangle.TriangleTest" methods="${testMethods}"></test>
        </junit>
    </target>

<!-- Run mutation testing -->
    <target name="mutation" depends="clean,init" description="Run mutation analysis for all unit test cases">
        <echo message="Running mutation analysis ..."/>
        <antcall target="compile.tests" />

        <delete dir="${dir.mut}"/>
        <mkdir dir="${dir.mut}"/>
        <copy file=".mutated/mutants.log" tofile="${dir.mut}/mutants.log" />
        <copy todir="${dir.mut}/mutants">
            <fileset dir=".mutated/mutants" />
        </copy>

        <junit  printsummary="false"
                  showoutput="false"
            mutationAnalysis="true"
               timeoutOffset="100"
                exportCovMap="true"
               exportKillMap="false"
                        sort="sort_methods"
              mutantsLogFile="${dir.mut}/mutants.log"
                  covMapFile="${dir.mut}/covMap.csv"
                 killMapFile="${dir.mut}/killMap.csv"
                 testMapFile="${dir.mut}/testMap.csv"
                 summaryFile="${dir.mut}/summary.csv"
                  resultFile="${dir.mut}/results.csv"
             killDetailsFile="${dir.mut}/killed.csv">

            <classpath path=".mutated"/>
            <classpath path="bin"/>
            <batchtest fork="false">
                <fileset dir="test">
                    <include name="**/*.java"/>
                </fileset>
            </batchtest>
        </junit>
     </target>

<!-- Coverage analysis -->
    <target name="coverageMutant" description="Run coverage analysis">
        <!--<antcall target="clean" />-->
        <antcall target="compile" />
        <antcall target="compileMutant" />

        <delete dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}"/>
        <mkdir dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}" />

        <delete>
            <fileset dir="." includes="*.ser"/>
        </delete>
        <delete dir=".instrumented" />

        <cobertura-instrument failOnError="true" toDir=".instrumented">
            <fileset dir="bin">
                <include name="**/TriangleTest.class"/>
            </fileset>
            <fileset dir=".mutated/mutants/${mutNo}/triangle">
                <include name="**/**.class"/>
            </fileset>
        </cobertura-instrument>
        <antcall target="testSpecificMutant" />
        <cobertura-report format="html" destdir=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}" srcdir=".mutated/mutants/${mutNo}" />

        <echo message="=================================================================================="/>
        <echo message="Coverage report mutant (html): .mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/triangle.Triangle.html"/>
        <echo message="=================================================================================="/>

        <delete dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/css"/>
        <delete dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/images"/>
        <delete dir=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/js"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/frame-packages.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/frame-sourcefiles-triangle.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/frame-sourcefiles.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/frame-summary-triangle.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/frame-summary.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/help.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/index.html"/>
        <delete file=".mutated/mutants/${mutNo}/${dir.cov_mutant}/${testNo}/triangle.TriangleTest.html"/>

    </target>

    <target name="coverageOriginal" description="Run coverage analysis">
        <!--<antcall target="clean" />-->
        <antcall target="compile" />
        <antcall target="compileFormatter"/>

        <delete dir="${dir.cov_original}"/>
        <mkdir dir="${dir.cov_original}" />

        <delete>
            <fileset dir="." includes="*.ser"/>
        </delete>
        <delete dir=".instrumented" />

        <cobertura-instrument failOnError="true" toDir=".instrumented">
            <fileset dir="bin">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
        <antcall target="testSpecificOriginal" />
        <!--<cobertura-report format="html" destdir="${dir.cov_original}/${testNo}" srcdir="src" />

        <echo message="=================================================================================="/>
        <echo message="Coverage report mutant (html): coverage_original_results/${testNo}/triangle.Triangle.html"/>
        <echo message="=================================================================================="/>

        <delete dir="${dir.cov_original}/${testNo}/css"/>
        <delete dir="${dir.cov_original}/${testNo}/images"/>
        <delete dir="${dir.cov_original}/${testNo}/js"/>
        <delete file="${dir.cov_original}/${testNo}/frame-packages.html"/>
        <delete file="${dir.cov_original}/${testNo}/frame-sourcefiles-triangle.html"/>
        <delete file="${dir.cov_original}/${testNo}/frame-sourcefiles.html"/>
        <delete file="${dir.cov_original}/${testNo}/frame-summary-triangle.html"/>
        <delete file="${dir.cov_original}/${testNo}/frame-summary.html"/>
        <delete file="${dir.cov_original}/${testNo}/help.html"/>
        <delete file="${dir.cov_original}/${testNo}/index.html"/>
        <delete file="${dir.cov_original}/${testNo}/triangle.TriangleTest.html"/>-->
    </target>

    <target name="coverageReportOriginal" description="Create coverage report">
        <cobertura-report 
            format="html" 
            datafile="${dir.cov_original}/${testNo}/cobertura.ser" 
            destdir="${dir.cov_original}/${testNo}" 
            srcdir="src" />
    </target>
</project>
